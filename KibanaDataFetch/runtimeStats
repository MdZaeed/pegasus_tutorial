#!/usr/bin/env python3

import json
import math
from os import utime, write
import numpy
from numpy.core.fromnumeric import sort
import pandas as pd
import plotly.express as px
from plotly.subplots import make_subplots
import plotly.graph_objects as go
from os.path import exists
import sys

def normalize(feature_name):
    max_value = feature_name.max()
    min_value = feature_name.min()
    result = (feature_name - min_value) / (max_value - min_value)
    return result


def changeRange(ts):
    b = ts - min(ts)
    # a= numpy.modf(b)
    # return a[1].astype(int)
    return b

with open("toRead") as f:
    workflow_ids = f.read().splitlines()

pd.set_option('float_format', '{:f}'.format)

kick_dfs = []
stamp_dfs = []
transfer_dfs = []
# wf_id = "eb2900f6-f072-41ba-8a28-da54010cc916" #1000-gnome
# wf_id = "42e89572-5a05-431b-9f53-db62f02fceb5" #SNS-namd
for workflow_id in workflow_ids:
    with open("kickstart/" + workflow_id) as f:
        temp_data = f.read()
        f.close()
    lst = json.loads(temp_data)
    kick_df = pd.DataFrame(lst)
    if kick_df.empty != True:
        # kick_dfs.append(kick_df)
        print(kick_df.loc('0','wf_label'))
        ts_range = min(kick_df['ts'])



